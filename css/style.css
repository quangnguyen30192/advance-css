/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

X direction: from left to right
Y direction: from top to bottom
*/

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%;
}

body {
    font-family: "Lato";
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 1.7;
    color: #777;
    padding: 3rem;

    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgb(85, 197, 122, 0.8)), url("../img/hero.jpg");
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.logo {
    height: 3.5rem;
}

/*.logo:hover {*/
/*    animation: moveInRight 1s ease-in;*/
/*}*/

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);

    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden; /* prevent the heading text move up a little bit when animation finished because its parent */
}

.heading-primary-main {
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-in; /* support better animation - make slower animation */

    /* shorthand:     animation: moveInLeft 1s ease-in; */
    /*animation-iteration-count: 3;*/
    /*animation-delay: 3s;*/
    /*animation-fill-mode: backwards;*/
}

.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.74rem;

    animation: moveInRight 1s ease-in;

    margin-bottom: 6rem;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem); /* rotate(30deg); put the element to the left 100px of the time of start */
    }

    /*60% {*/
    /*    transform: rotate(180deg);*/
    /*}*/

    80% {
        transform: translateX(1rem); /* put the element to the right 20px 20% of the time finished */
    }

    100% {
        opacity: 1;
        transform: translateX(0); /* set to origin posiion */
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem); /* put the element to the right 100px of the time of start */
    }

    80% {
        transform: translateX(-1rem); /* put the element to the left 20px before the time finished 20% */
    }

    100% {
        opacity: 1;
        transform: translateX(0); /* set to origin position */
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(10rem); /* put the element to the bottom 100px of the time of start */
    }

    100% {
        opacity: 1;
        transform: translateX(0); /* set to origin position */
    }
}


.btn:link, .btn:visited /* after clicked - purple by default */ {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; /*prevent the button not to stick to heading sub*/
    border-radius: 10rem;

    transition: all .2s; /* make transform from hover and acitive state (and more) more smooth */

    position: relative; /* reference of position relative of .btn::after */
}

.btn:hover {
    transform: translateY(-0.4rem);
    box-shadow: 0 /* shadow for X direction */
                1rem /* shadow for Y direction */
                2rem /* blur */
                rgba(0, 0, 0, 0.2) /* make it more transparently fro, black*/;
}

.btn:active /* when clicked */ {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); /* make the shadow behaves naturally once clicked */
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after /* insert the box content */{
    content: '';
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;

    position: absolute; /* make the height and width of the box content equal to the btn */

    /* make the box content laid out - override the btn*/
    top: 0;
    left: 0;

    z-index: -1; /* hide the box content after the btn */
    transition: all .4s;
}

/* make btn-white consistency to btn with white background color after btn::after*/
.btn-white::after {
    background-color: #fff;
}

/* animation: make the box content of btn display but fade out (opacity: 0) */
.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s /* delay - when the page done loaded - show the button first and then animations starts after 0.75s*/;
    animation-fill-mode: backwards; /*  not to show the element first - starts the animation after 0.75s and then show up the element */
}